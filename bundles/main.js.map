{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/dots.ts","webpack:///./src/text.ts","webpack:///./node_modules/lil-gui/dist/lil-gui.esm.js","webpack:///./src/log.ts","webpack:///./src/canvas/instance.ts","webpack:///./src/canvas/manager.ts","webpack:///./src/easing.ts","webpack:///./src/index.ts"],"sourcesContent":["import { Dots, DotsDetailed } from './index.d';\nimport CanvasInstance from './canvas/instance';\n\n\n\n/**\n * @name get_relative_pos\n * @description gets the relative position of the mouse on the canvas\n * @param {MouseEvent} e the mouse event to use for the mouse position\n * @returns {[number, number]} the relative position of the mouse on the canvas\n */\nexport const get_relative_pos = (\n ci: CanvasInstance,\n e: MouseEvent\n): [number, number] => {\n const rect = ci.canvas.getBoundingClientRect();\n return [\n e.clientX - rect.left,\n e.clientY - rect.top\n ];\n}\n\n\n\n/**\n * @name render_dots\n * @description renders the dots to the canvas\n * @param {CanvasInstance} ci the canvas instance to render to\n * @param {Dots | DotsDetailed} dots the dots to render\n * @param {MouseEvent} e the mouse event to use for the mouse position\n * @param {number} [x_o=0] the x coordinate to start rendering at\n * @param {number} [y_o=0] the y coordinate to start rendering at\n */\nexport const render_dots = (\n ci: CanvasInstance, \n dots: Dots | DotsDetailed,\n e: MouseEvent = null,\n x_o: number = 0,\n y_o: number = 0\n): void => {\n\n // -- Get the mouse position\n let mouse_pos: [number, number] = [-5000, -5000];\n if (e !== null) mouse_pos = get_relative_pos(ci, e);\n\n ci.ctx.beginPath();\n ci.ctx.arc(mouse_pos[0], mouse_pos[1], 10, 0, 2 * Math.PI);\n ci.ctx.fill();\n\n \n // -- Check if the dots are detailed\n let detailed = false;\n if ('data' in dots) {\n detailed = true;\n dots.rows = dots.data.length;\n dots.cols = 0;\n\n // -- Get the longest row\n for (let row = 0; row < dots.rows; row++) {\n if (dots.data[row].length > dots.cols) \n dots.cols = dots.data[row].length;\n }\n }\n\n\n // -- Loop through each row\n for (let row = 0; row < dots.rows; row++) {\n\n // -- Loop through each column\n for (let col = 0; col < dots.cols; col++) {\n // -- Check if the dot is 0\n if (detailed && (dots as DotsDetailed).data[row][col] !== 1) continue;\n\n // -- Calculate the x and y coordinates\n let x = (col * dots.dot_size) + (col * dots.dot_spacing) + x_o,\n y = (row * dots.dot_size) + (row * dots.dot_spacing) + y_o;\n\n // -- Calculate the distance\n const dist = get_dist_from_mouse(mouse_pos, x, y);\n let size = dots.dot_size;\n\n // -- Push the dot away from the mouse\n if (dist < dots.force_size)\n [x, y] = push_dot(mouse_pos, x, y, dist, dots.force_size, dots.force);\n\n // -- Check if the distance is greater than the max distance\n if (dist < dots.max_dist) {\n // -- Calculate the size of the dot\n const capped_dist = Math.min(dist, dots.max_dist),\n norm_dist = (capped_dist / dots.max_dist) - 1;\n\n // -- Calc the size, if 100, then 1, if 0, then 2\n size = dots.dot_size + (norm_dist * dots.dot_size);\n }\n \n\n // -- Draw the dot\n ci.ctx.fillStyle = dots.color;\n \n // -- Circle\n ci.ctx.beginPath();\n ci.ctx.arc(x, y, size / 2, 0, 2 * Math.PI);\n ci.ctx.fill();\n }\n }\n};\n\n\n\n\n/**\n * @name get_dist_from_mouse\n * @description gets the distance from the mouse to a dot\n * @param {[number, number]} mouse_pos the mouse position\n * @param {number} x the x coordinate of the dot\n * @param {number} y the y coordinate of the dot\n * @returns {number} the distance from the mouse to the dot\n */\nexport const get_dist_from_mouse = (\n mouse_pos: [number, number],\n x: number,\n y: number,\n): number => {\n\n // -- Calculate the distance\n const dist = Math.sqrt(\n Math.pow(mouse_pos[0] - x, 2) + \n Math.pow(mouse_pos[1] - y, 2)\n );\n\n // -- Return the distance\n return dist;\n}\n\n\n\n/**\n * @name push_dot\n * @description pushes a dot away from the mouse, sortof like\n * a circular repulsion\n * @param {[number, number]} mouse_pos the mouse position\n * @param {number} x the x coordinate of the dot\n * @param {number} y the y coordinate of the dot\n * @param {number} dist the distance from the mouse to the dot\n * @param {number} max_dist the maximum distance to push the dot away (if the distance is greater than this, then the dot will not be pushed)\n * @param {number} [force=1] the force to push the dot away with\n * @returns {[number, number]} the new x and y coordinates of the dot\n */\nexport const push_dot = (\n mouse_pos: [number, number],\n x: number,\n y: number,\n dist: number,\n max_dist: number = 100,\n force: number = 1\n): [number, number] => {\n\n // -- If the distance is greater than the max distance, then return the original coordinates\n if (dist > max_dist) return [x, y];\n\n // -- Calculate the angle\n const angle = Math.atan2(mouse_pos[1] - y, mouse_pos[0] - x);\n\n // -- How much force to apply (the closer the mouse is, the more force to apply)\n force = force * (1 - (dist / max_dist));\n\n // -- Calculate the new x and y coordinates\n const new_x = x - (Math.cos(angle) * force),\n new_y = y - (Math.sin(angle) * force);\n\n // -- Return the new coordinates\n return [new_x, new_y];\n}\n\n","import CanvasInstance from './canvas/instance';\n\nexport const generate_text_points = (\n text: string, \n text_height: number,\n ci: CanvasInstance,\n) => {\n let balls = [],\n matrix = [];\n\n const width = ci.draw_ctx.canvas.width,\n height = ci.draw_ctx.canvas.height;\n\n\n ci.draw_ctx.clearRect(0, 0, width, height);\n ci.draw_ctx.font = `${text_height}px Arial`;\n ci.draw_ctx.fillStyle = '#000';\n ci.draw_ctx.fillText(text, 0, text_height);\n\n \n // -- get a Uint32 representation of the bitmap:\n const data32 = new Uint32Array(ci.draw_ctx.getImageData(\n 0, 0,\n width, \n height \n ).data.buffer);\n \n\n\n for(let i = 0; i < data32.length; i++) {\n // -- Check if the pixel is not transparent\n if (data32[i] & 0xff000000) balls.push({\n x: (i % width) | 0,\n y: ((i / width) | 0),\n });\n }\n\n\n // -- Convert the balls into a matrix of points wher 1 is a point and 0 is not\n for(let i = 0; i < balls.length; i++) {\n const ball = balls[i];\n\n if (!matrix[ball.y]) matrix[ball.y] = [];\n matrix[ball.y][ball.x] = 1;\n }\n\n\n // -- Fill in the gaps\n let processes: Array<Array<number>> = [];\n for(let i = 0; i < matrix.length; i++) {\n const row = matrix[i];\n if (!row) continue;\n let new_row = [];\n \n for(let j = 0; j < row.length; j++) {\n \n if (row[j] === 1) new_row.push(1);\n else new_row.push(0);\n \n }\n\n processes.push(new_row);\n }\n\n \n\n // -- return 2D array of points\n return processes;\n}\n","/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.18.2\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n\n\tconstructor( parent, object, property, className, widgetTag = 'div' ) {\n\n\t\t/**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._disabled = false;\n\n\t\t/**\n\t\t * Used to determine if the Controller is hidden.\n\t\t * Use `controller.show()` or `controller.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */\n\t\tthis.initialValue = this.getValue();\n\n\t\t/**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'controller' );\n\t\tthis.domElement.classList.add( className );\n\n\t\t/**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$name = document.createElement( 'div' );\n\t\tthis.$name.classList.add( 'name' );\n\n\t\tController.nextNameID = Controller.nextNameID || 0;\n\t\tthis.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n\n\t\t/**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$widget = document.createElement( widgetTag );\n\t\tthis.$widget.classList.add( 'widget' );\n\n\t\t/**\n\t\t * The DOM element that receives the disabled attribute when using disable()\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$disable = this.$widget;\n\n\t\tthis.domElement.appendChild( this.$name );\n\t\tthis.domElement.appendChild( this.$widget );\n\n\t\t// Don't fire global key events while typing in a controller\n\t\tthis.domElement.addEventListener( 'keydown', e => e.stopPropagation() );\n\t\tthis.domElement.addEventListener( 'keyup', e => e.stopPropagation() );\n\n\t\tthis.parent.children.push( this );\n\t\tthis.parent.controllers.push( this );\n\n\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\tthis._listenCallback = this._listenCallback.bind( this );\n\n\t\tthis.name( property );\n\n\t}\n\n\t/**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */\n\tname( name ) {\n\t\t/**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\t\tthis.$name.innerHTML = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t *\n\t * For function controllers, the `onChange` callback will be fired on click, after the function\n\t * executes.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */\n\t_callOnChange() {\n\n\t\tthis.parent._callOnChange( this );\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, this.getValue() );\n\t\t}\n\n\t\tthis._changed = true;\n\n\t}\n\n\t/**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */\n\t_callOnFinishChange() {\n\n\t\tif ( this._changed ) {\n\n\t\t\tthis.parent._callOnFinishChange( this );\n\n\t\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\t\tthis._onFinishChange.call( this, this.getValue() );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._changed = false;\n\n\t}\n\n\t/**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */\n\treset() {\n\t\tthis.setValue( this.initialValue );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */\n\tenable( enabled = true ) {\n\t\treturn this.disable( !enabled );\n\t}\n\n\t/**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */\n\tdisable( disabled = true ) {\n\n\t\tif ( disabled === this._disabled ) return this;\n\n\t\tthis._disabled = disabled;\n\n\t\tthis.domElement.classList.toggle( 'disabled', disabled );\n\t\tthis.$disable.toggleAttribute( 'disabled', disabled );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Shows the Controller after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * controller.show();\n\t * controller.show( false ); // hide\n\t * controller.show( controller._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the Controller.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\t/**\n\t * Destroys this controller and replaces it with a new option controller. Provided as a more\n\t * descriptive syntax for `gui.add`, but primarily for compatibility with dat.gui.\n\t *\n\t * Use caution, as this method will destroy old references to this controller. It will also\n\t * change controller order if called out of sequence, moving the option controller to the end of\n\t * the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( object1, 'property' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( object2, 'property' );\n\t *\n\t * // danger\n\t *\n\t * const c = gui.add( object1, 'property' );\n\t * gui.add( object2, 'property' );\n\t *\n\t * c.options( [ 'a', 'b', 'c' ] );\n\t * // controller is now at the end of the GUI even though it was added first\n\t *\n\t * assert( c.parent.children.indexOf( c ) === -1 )\n\t * // c references a controller that no longer exists\n\t *\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */\n\toptions( options ) {\n\t\tconst controller = this.parent.add( this.object, this.property, options );\n\t\tcontroller.name( this._name );\n\t\tthis.destroy();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */\n\tmin( min ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */\n\tmax( max ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Values set by this controller will be rounded to multiples of `step`. Only works on number\n\t * controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */\n\tstep( step ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Rounds the displayed value to a fixed number of decimals, without affecting the actual value\n\t * like `step()`. Only works on number controllers.\n\t * @example\n\t * gui.add( object, 'property' ).listen().decimals( 4 );\n\t * @param {number} decimals\n\t * @returns {this}\n\t */\n\tdecimals( decimals ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */\n\tlisten( listen = true ) {\n\n\t\t/**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._listening = listen;\n\n\t\tif ( this._listenCallbackID !== undefined ) {\n\t\t\tcancelAnimationFrame( this._listenCallbackID );\n\t\t\tthis._listenCallbackID = undefined;\n\t\t}\n\n\t\tif ( this._listening ) {\n\t\t\tthis._listenCallback();\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_listenCallback() {\n\n\t\tthis._listenCallbackID = requestAnimationFrame( this._listenCallback );\n\n\t\t// To prevent framerate loss, make sure the value has changed before updating the display.\n\t\t// Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n\t\t// won't work for color objects or arrays, but ColorController.save() always returns a string.\n\n\t\tconst curValue = this.save();\n\n\t\tif ( curValue !== this._listenPrevValue ) {\n\t\t\tthis.updateDisplay();\n\t\t}\n\n\t\tthis._listenPrevValue = curValue;\n\n\t}\n\n\t/**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */\n\tgetValue() {\n\t\treturn this.object[ this.property ];\n\t}\n\n\t/**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */\n\tsetValue( value ) {\n\t\tthis.object[ this.property ] = value;\n\t\tthis._callOnChange();\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */\n\tupdateDisplay() {\n\t\treturn this;\n\t}\n\n\tload( value ) {\n\t\tthis.setValue( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tsave() {\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */\n\tdestroy() {\n\t\tthis.listen( false );\n\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\tthis.parent.controllers.splice( this.parent.controllers.indexOf( this ), 1 );\n\t\tthis.parent.$children.removeChild( this.domElement );\n\t}\n\n}\n\nclass BooleanController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'boolean', 'label' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'checkbox' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$input.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this.$input.checked );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.checked = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nfunction normalizeColorString( string ) {\n\n\tlet match, result;\n\n\tif ( match = string.match( /(#|0x)?([a-f0-9]{6})/i ) ) {\n\n\t\tresult = match[ 2 ];\n\n\t} else if ( match = string.match( /rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/ ) ) {\n\n\t\tresult = parseInt( match[ 1 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 2 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 3 ] ).toString( 16 ).padStart( 2, 0 );\n\n\t} else if ( match = string.match( /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i ) ) {\n\n\t\tresult = match[ 1 ] + match[ 1 ] + match[ 2 ] + match[ 2 ] + match[ 3 ] + match[ 3 ];\n\n\t}\n\n\tif ( result ) {\n\t\treturn '#' + result;\n\t}\n\n\treturn false;\n\n}\n\nconst STRING = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'string',\n\tfromHexString: normalizeColorString,\n\ttoHexString: normalizeColorString\n};\n\nconst INT = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'number',\n\tfromHexString: string => parseInt( string.substring( 1 ), 16 ),\n\ttoHexString: value => '#' + value.toString( 16 ).padStart( 6, 0 )\n};\n\nconst ARRAY = {\n\tisPrimitive: false,\n\n\t// The arrow function is here to appease tree shakers like esbuild or webpack.\n\t// See https://esbuild.github.io/api/#tree-shaking\n\tmatch: v => Array.isArray( v ),\n\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget[ 0 ] = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 1 ] = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 2 ] = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( [ r, g, b ], rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst OBJECT = {\n\tisPrimitive: false,\n\tmatch: v => Object( v ) === v,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget.r = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget.g = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget.b = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( { r, g, b }, rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst FORMATS = [ STRING, INT, ARRAY, OBJECT ];\n\nfunction getColorFormat( value ) {\n\treturn FORMATS.find( format => format.match( value ) );\n}\n\nclass ColorController extends Controller {\n\n\tconstructor( parent, object, property, rgbScale ) {\n\n\t\tsuper( parent, object, property, 'color' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'color' );\n\t\tthis.$input.setAttribute( 'tabindex', -1 );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$text = document.createElement( 'input' );\n\t\tthis.$text.setAttribute( 'type', 'text' );\n\t\tthis.$text.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$text.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$display.appendChild( this.$input );\n\t\tthis.$widget.appendChild( this.$display );\n\t\tthis.$widget.appendChild( this.$text );\n\n\t\tthis._format = getColorFormat( this.initialValue );\n\t\tthis._rgbScale = rgbScale;\n\n\t\tthis._initialValueHexString = this.save();\n\t\tthis._textFocused = false;\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis._setValueFromHexString( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'input', () => {\n\t\t\tconst tryParse = normalizeColorString( this.$text.value );\n\t\t\tif ( tryParse ) {\n\t\t\t\tthis._setValueFromHexString( tryParse );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'focus', () => {\n\t\t\tthis._textFocused = true;\n\t\t\tthis.$text.select();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'blur', () => {\n\t\t\tthis._textFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$text;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\treset() {\n\t\tthis._setValueFromHexString( this._initialValueHexString );\n\t\treturn this;\n\t}\n\n\t_setValueFromHexString( value ) {\n\n\t\tif ( this._format.isPrimitive ) {\n\n\t\t\tconst newValue = this._format.fromHexString( value );\n\t\t\tthis.setValue( newValue );\n\n\t\t} else {\n\n\t\t\tthis._format.fromHexString( value, this.getValue(), this._rgbScale );\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\tsave() {\n\t\treturn this._format.toHexString( this.getValue(), this._rgbScale );\n\t}\n\n\tload( value ) {\n\t\tthis._setValueFromHexString( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this._format.toHexString( this.getValue(), this._rgbScale );\n\t\tif ( !this._textFocused ) {\n\t\t\tthis.$text.value = this.$input.value.substring( 1 );\n\t\t}\n\t\tthis.$display.style.backgroundColor = this.$input.value;\n\t\treturn this;\n\t}\n\n}\n\nclass FunctionController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'function' );\n\n\t\t// Buttons are the only case where widget contains name\n\t\tthis.$button = document.createElement( 'button' );\n\t\tthis.$button.appendChild( this.$name );\n\t\tthis.$widget.appendChild( this.$button );\n\n\t\tthis.$button.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.getValue().call( this.object );\n\t\t\tthis._callOnChange();\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$button.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\tthis.$disable = this.$button;\n\n\t}\n\n}\n\nclass NumberController extends Controller {\n\n\tconstructor( parent, object, property, min, max, step ) {\n\n\t\tsuper( parent, object, property, 'number' );\n\n\t\tthis._initInput();\n\n\t\tthis.min( min );\n\t\tthis.max( max );\n\n\t\tconst stepExplicit = step !== undefined;\n\t\tthis.step( stepExplicit ? step : this._getImplicitStep(), stepExplicit );\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tdecimals( decimals ) {\n\t\tthis._decimals = decimals;\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\tmin( min ) {\n\t\tthis._min = min;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tmax( max ) {\n\t\tthis._max = max;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tstep( step, explicit = true ) {\n\t\tthis._step = step;\n\t\tthis._stepExplicit = explicit;\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\n\t\tconst value = this.getValue();\n\n\t\tif ( this._hasSlider ) {\n\n\t\t\tlet percent = ( value - this._min ) / ( this._max - this._min );\n\t\t\tpercent = Math.max( 0, Math.min( percent, 1 ) );\n\n\t\t\tthis.$fill.style.width = percent * 100 + '%';\n\n\t\t}\n\n\t\tif ( !this._inputFocused ) {\n\t\t\tthis.$input.value = this._decimals === undefined ? value : value.toFixed( this._decimals );\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_initInput() {\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\t// On touch devices only, use input[type=number] to force a numeric keyboard.\n\t\t// Ideally we could use one input type everywhere, but [type=number] has quirks\n\t\t// on desktop, and [inputmode=decimal] has quirks on iOS.\n\t\t// See https://github.com/georgealways/lil-gui/pull/16\n\n\t\tconst isTouch = window.matchMedia( '(pointer: coarse)' ).matches;\n\n\t\tif ( isTouch ) {\n\t\t\tthis.$input.setAttribute( 'type', 'number' );\n\t\t\tthis.$input.setAttribute( 'step', 'any' );\n\t\t}\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tconst onInput = () => {\n\n\t\t\tlet value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tif ( this._stepExplicit ) {\n\t\t\t\tvalue = this._snap( value );\n\t\t\t}\n\n\t\t\tthis.setValue( this._clamp( value ) );\n\n\t\t};\n\n\t\t// Keys & mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst increment = delta => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis._snapClampSetValue( value + delta );\n\n\t\t\t// Force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t};\n\n\t\tconst onKeyDown = e => {\n\t\t\t// Using `e.key` instead of `e.code` also catches NumpadEnter\n\t\t\tif ( e.key === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowUp' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) );\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowDown' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) * -1 );\n\t\t\t}\n\t\t};\n\n\t\tconst onWheel = e => {\n\t\t\tif ( this._inputFocused ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._normalizeMouseWheel( e ) );\n\t\t\t}\n\t\t};\n\n\t\t// Vertical drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForVerticalDrag = false,\n\t\t\tinitClientX,\n\t\t\tinitClientY,\n\t\t\tprevClientY,\n\t\t\tinitValue,\n\t\t\tdragDelta;\n\n\t\t// Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n\t\t// on the user's intent: horizontal means highlight, vertical means drag.\n\t\tconst DRAG_THRESH = 5;\n\n\t\tconst onMouseDown = e => {\n\n\t\t\tinitClientX = e.clientX;\n\t\t\tinitClientY = prevClientY = e.clientY;\n\t\t\ttestingForVerticalDrag = true;\n\n\t\t\tinitValue = this.getValue();\n\t\t\tdragDelta = 0;\n\n\t\t\twindow.addEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.addEventListener( 'mouseup', onMouseUp );\n\n\t\t};\n\n\t\tconst onMouseMove = e => {\n\n\t\t\tif ( testingForVerticalDrag ) {\n\n\t\t\t\tconst dx = e.clientX - initClientX;\n\t\t\t\tconst dy = e.clientY - initClientY;\n\n\t\t\t\tif ( Math.abs( dy ) > DRAG_THRESH ) {\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$input.blur();\n\t\t\t\t\ttestingForVerticalDrag = false;\n\t\t\t\t\tthis._setDraggingStyle( true, 'vertical' );\n\n\t\t\t\t} else if ( Math.abs( dx ) > DRAG_THRESH ) {\n\n\t\t\t\t\tonMouseUp();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// This isn't an else so that the first move counts towards dragDelta\n\t\t\tif ( !testingForVerticalDrag ) {\n\n\t\t\t\tconst dy = e.clientY - prevClientY;\n\n\t\t\t\tdragDelta -= dy * this._step * this._arrowKeyMultiplier( e );\n\n\t\t\t\t// Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n\t\t\t\t// We're okay with the fact that bounds can be undefined here.\n\t\t\t\tif ( initValue + dragDelta > this._max ) {\n\t\t\t\t\tdragDelta = this._max - initValue;\n\t\t\t\t} else if ( initValue + dragDelta < this._min ) {\n\t\t\t\t\tdragDelta = this._min - initValue;\n\t\t\t\t}\n\n\t\t\t\tthis._snapClampSetValue( initValue + dragDelta );\n\n\t\t\t}\n\n\t\t\tprevClientY = e.clientY;\n\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis._setDraggingStyle( false, 'vertical' );\n\t\t\tthis._callOnFinishChange();\n\t\t\twindow.removeEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', onMouseUp );\n\t\t};\n\n\t\t// Focus state & onFinishChange\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst onFocus = () => {\n\t\t\tthis._inputFocused = true;\n\t\t};\n\n\t\tconst onBlur = () => {\n\t\t\tthis._inputFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t};\n\n\t\tthis.$input.addEventListener( 'input', onInput );\n\t\tthis.$input.addEventListener( 'keydown', onKeyDown );\n\t\tthis.$input.addEventListener( 'wheel', onWheel, { passive: false } );\n\t\tthis.$input.addEventListener( 'mousedown', onMouseDown );\n\t\tthis.$input.addEventListener( 'focus', onFocus );\n\t\tthis.$input.addEventListener( 'blur', onBlur );\n\n\t}\n\n\t_initSlider() {\n\n\t\tthis._hasSlider = true;\n\n\t\t// Build DOM\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis.$slider = document.createElement( 'div' );\n\t\tthis.$slider.classList.add( 'slider' );\n\n\t\tthis.$fill = document.createElement( 'div' );\n\t\tthis.$fill.classList.add( 'fill' );\n\n\t\tthis.$slider.appendChild( this.$fill );\n\t\tthis.$widget.insertBefore( this.$slider, this.$input );\n\n\t\tthis.domElement.classList.add( 'hasSlider' );\n\n\t\t// Map clientX to value\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst map = ( v, a, b, c, d ) => {\n\t\t\treturn ( v - a ) / ( b - a ) * ( d - c ) + c;\n\t\t};\n\n\t\tconst setValueFromX = clientX => {\n\t\t\tconst rect = this.$slider.getBoundingClientRect();\n\t\t\tlet value = map( clientX, rect.left, rect.right, this._min, this._max );\n\t\t\tthis._snapClampSetValue( value );\n\t\t};\n\n\t\t// Mouse drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst mouseDown = e => {\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.clientX );\n\t\t\twindow.addEventListener( 'mousemove', mouseMove );\n\t\t\twindow.addEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\tconst mouseMove = e => {\n\t\t\tsetValueFromX( e.clientX );\n\t\t};\n\n\t\tconst mouseUp = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'mousemove', mouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\t// Touch drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForScroll = false, prevClientX, prevClientY;\n\n\t\tconst beginTouchDrag = e => {\n\t\t\te.preventDefault();\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\t\t\ttestingForScroll = false;\n\t\t};\n\n\t\tconst onTouchStart = e => {\n\n\t\t\tif ( e.touches.length > 1 ) return;\n\n\t\t\t// If we're in a scrollable container, we should wait for the first\n\t\t\t// touchmove to see if the user is trying to slide or scroll.\n\t\t\tif ( this._hasScrollBar ) {\n\n\t\t\t\tprevClientX = e.touches[ 0 ].clientX;\n\t\t\t\tprevClientY = e.touches[ 0 ].clientY;\n\t\t\t\ttestingForScroll = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we can set the value straight away on touchstart.\n\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t}\n\n\t\t\twindow.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\t\t\twindow.addEventListener( 'touchend', onTouchEnd );\n\n\t\t};\n\n\t\tconst onTouchMove = e => {\n\n\t\t\tif ( testingForScroll ) {\n\n\t\t\t\tconst dx = e.touches[ 0 ].clientX - prevClientX;\n\t\t\t\tconst dy = e.touches[ 0 ].clientY - prevClientY;\n\n\t\t\t\tif ( Math.abs( dx ) > Math.abs( dy ) ) {\n\n\t\t\t\t\t// We moved horizontally, set the value and stop checking.\n\t\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// This was, in fact, an attempt to scroll. Abort.\n\t\t\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\te.preventDefault();\n\t\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst onTouchEnd = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\t\t};\n\n\t\t// Mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\t// We have to use a debounced function to call onFinishChange because\n\t\t// there's no way to tell when the user is \"done\" mouse-wheeling.\n\t\tconst callOnFinishChange = this._callOnFinishChange.bind( this );\n\t\tconst WHEEL_DEBOUNCE_TIME = 400;\n\t\tlet wheelFinishChangeTimeout;\n\n\t\tconst onWheel = e => {\n\n\t\t\t// ignore vertical wheels if there's a scrollbar\n\t\t\tconst isVertical = Math.abs( e.deltaX ) < Math.abs( e.deltaY );\n\t\t\tif ( isVertical && this._hasScrollBar ) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// set value\n\t\t\tconst delta = this._normalizeMouseWheel( e ) * this._step;\n\t\t\tthis._snapClampSetValue( this.getValue() + delta );\n\n\t\t\t// force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t\t// debounce onFinishChange\n\t\t\tclearTimeout( wheelFinishChangeTimeout );\n\t\t\twheelFinishChangeTimeout = setTimeout( callOnFinishChange, WHEEL_DEBOUNCE_TIME );\n\n\t\t};\n\n\t\tthis.$slider.addEventListener( 'mousedown', mouseDown );\n\t\tthis.$slider.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tthis.$slider.addEventListener( 'wheel', onWheel, { passive: false } );\n\n\t}\n\n\t_setDraggingStyle( active, axis = 'horizontal' ) {\n\t\tif ( this.$slider ) {\n\t\t\tthis.$slider.classList.toggle( 'active', active );\n\t\t}\n\t\tdocument.body.classList.toggle( 'lil-gui-dragging', active );\n\t\tdocument.body.classList.toggle( `lil-gui-${axis}`, active );\n\t}\n\n\t_getImplicitStep() {\n\n\t\tif ( this._hasMin && this._hasMax ) {\n\t\t\treturn ( this._max - this._min ) / 1000;\n\t\t}\n\n\t\treturn 0.1;\n\n\t}\n\n\t_onUpdateMinMax() {\n\n\t\tif ( !this._hasSlider && this._hasMin && this._hasMax ) {\n\n\t\t\t// If this is the first time we're hearing about min and max\n\t\t\t// and we haven't explicitly stated what our step is, let's\n\t\t\t// update that too.\n\t\t\tif ( !this._stepExplicit ) {\n\t\t\t\tthis.step( this._getImplicitStep(), false );\n\t\t\t}\n\n\t\t\tthis._initSlider();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\t_normalizeMouseWheel( e ) {\n\n\t\tlet { deltaX, deltaY } = e;\n\n\t\t// Safari and Chrome report weird non-integral values for a notched wheel,\n\t\t// but still expose actual lines scrolled via wheelDelta. Notched wheels\n\t\t// should behave the same way as arrow keys.\n\t\tif ( Math.floor( e.deltaY ) !== e.deltaY && e.wheelDelta ) {\n\t\t\tdeltaX = 0;\n\t\t\tdeltaY = -e.wheelDelta / 120;\n\t\t\tdeltaY *= this._stepExplicit ? 1 : 10;\n\t\t}\n\n\t\tconst wheel = deltaX + -deltaY;\n\n\t\treturn wheel;\n\n\t}\n\n\t_arrowKeyMultiplier( e ) {\n\n\t\tlet mult = this._stepExplicit ? 1 : 10;\n\n\t\tif ( e.shiftKey ) {\n\t\t\tmult *= 10;\n\t\t} else if ( e.altKey ) {\n\t\t\tmult /= 10;\n\t\t}\n\n\t\treturn mult;\n\n\t}\n\n\t_snap( value ) {\n\n\t\t// This would be the logical way to do things, but floating point errors.\n\t\t// return Math.round( value / this._step ) * this._step;\n\n\t\t// Using inverse step solves a lot of them, but not all\n\t\t// const inverseStep = 1 / this._step;\n\t\t// return Math.round( value * inverseStep ) / inverseStep;\n\n\t\t// Not happy about this, but haven't seen it break.\n\t\tconst r = Math.round( value / this._step ) * this._step;\n\t\treturn parseFloat( r.toPrecision( 15 ) );\n\n\t}\n\n\t_clamp( value ) {\n\t\t// either condition is false if min or max is undefined\n\t\tif ( value < this._min ) value = this._min;\n\t\tif ( value > this._max ) value = this._max;\n\t\treturn value;\n\t}\n\n\t_snapClampSetValue( value ) {\n\t\tthis.setValue( this._clamp( this._snap( value ) ) );\n\t}\n\n\tget _hasScrollBar() {\n\t\tconst root = this.parent.root.$children;\n\t\treturn root.scrollHeight > root.clientHeight;\n\t}\n\n\tget _hasMin() {\n\t\treturn this._min !== undefined;\n\t}\n\n\tget _hasMax() {\n\t\treturn this._max !== undefined;\n\t}\n\n}\n\nclass OptionController extends Controller {\n\n\tconstructor( parent, object, property, options ) {\n\n\t\tsuper( parent, object, property, 'option' );\n\n\t\tthis.$select = document.createElement( 'select' );\n\t\tthis.$select.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis._values = Array.isArray( options ) ? options : Object.values( options );\n\t\tthis._names = Array.isArray( options ) ? options : Object.keys( options );\n\n\t\tthis._names.forEach( name => {\n\t\t\tconst $option = document.createElement( 'option' );\n\t\t\t$option.innerHTML = name;\n\t\t\tthis.$select.appendChild( $option );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this._values[ this.$select.selectedIndex ] );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'focus', () => {\n\t\t\tthis.$display.classList.add( 'focus' );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'blur', () => {\n\t\t\tthis.$display.classList.remove( 'focus' );\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$select );\n\t\tthis.$widget.appendChild( this.$display );\n\n\t\tthis.$disable = this.$select;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tconst value = this.getValue();\n\t\tconst index = this._values.indexOf( value );\n\t\tthis.$select.selectedIndex = index;\n\t\tthis.$display.innerHTML = index === -1 ? value : this._names[ index ];\n\t\treturn this;\n\t}\n\n}\n\nclass StringController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'string' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis.setValue( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nconst stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  background-color: var(--background-color);\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean .widget {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"↕\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background-color: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background-color: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background-color: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"▾\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"▸\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui input {\n  -webkit-tap-highlight-color: transparent;\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input::-webkit-outer-spin-button,\n.lil-gui input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.lil-gui input[type=number] {\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  -webkit-appearance: none;\n  height: var(--checkbox-size);\n  width: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"✓\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: 1px solid var(--widget-color);\n  text-align: center;\n  line-height: calc(var(--widget-height) - 4px);\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n    border-color: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    border-color: var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles( cssContent ) {\n\tconst injected = document.createElement( 'style' );\n\tinjected.innerHTML = cssContent;\n\tconst before = document.querySelector( 'head link[rel=stylesheet], head style' );\n\tif ( before ) {\n\t\tdocument.head.insertBefore( injected, before );\n\t} else {\n\t\tdocument.head.appendChild( injected );\n\t}\n}\n\nlet stylesInjected = false;\n\nclass GUI {\n\n\t/**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.closeFolders=false]\n\t * Pass `true` to close all folders in this GUI by default.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t *\n\t */\n\tconstructor( {\n\t\tparent,\n\t\tautoPlace = parent === undefined,\n\t\tcontainer,\n\t\twidth,\n\t\ttitle = 'Controls',\n\t\tcloseFolders = false,\n\t\tinjectStyles = true,\n\t\ttouchStyles = true\n\t} = {} ) {\n\n\t\t/**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.root = parent ? parent.root : this;\n\n\t\t/**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\t/**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */\n\t\tthis.folders = [];\n\n\t\t/**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._closed = false;\n\n\t\t/**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'lil-gui' );\n\n\t\t/**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$title = document.createElement( 'div' );\n\t\tthis.$title.classList.add( 'title' );\n\t\tthis.$title.setAttribute( 'role', 'button' );\n\t\tthis.$title.setAttribute( 'aria-expanded', true );\n\t\tthis.$title.setAttribute( 'tabindex', 0 );\n\n\t\tthis.$title.addEventListener( 'click', () => this.openAnimated( this._closed ) );\n\t\tthis.$title.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' || e.code === 'Space' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.$title.click();\n\t\t\t}\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$title.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\t/**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$children = document.createElement( 'div' );\n\t\tthis.$children.classList.add( 'children' );\n\n\t\tthis.domElement.appendChild( this.$title );\n\t\tthis.domElement.appendChild( this.$children );\n\n\t\tthis.title( title );\n\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.children.push( this );\n\t\t\tthis.parent.folders.push( this );\n\n\t\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\t\t// Stop the constructor early, everything onward only applies to root GUI's\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.domElement.classList.add( 'root' );\n\n\t\tif ( touchStyles ) {\n\t\t\tthis.domElement.classList.add( 'allow-touch-styles' );\n\t\t}\n\n\t\t// Inject stylesheet if we haven't done that yet\n\t\tif ( !stylesInjected && injectStyles ) {\n\t\t\t_injectStyles( stylesheet );\n\t\t\tstylesInjected = true;\n\t\t}\n\n\t\tif ( container ) {\n\n\t\t\tcontainer.appendChild( this.domElement );\n\n\t\t} else if ( autoPlace ) {\n\n\t\t\tthis.domElement.classList.add( 'autoPlace' );\n\t\t\tdocument.body.appendChild( this.domElement );\n\n\t\t}\n\n\t\tif ( width ) {\n\t\t\tthis.domElement.style.setProperty( '--width', width + 'px' );\n\t\t}\n\n\t\tthis._closeFolders = closeFolders;\n\n\t}\n\n\t/**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */\n\tadd( object, property, $1, max, step ) {\n\n\t\tif ( Object( $1 ) === $1 ) {\n\n\t\t\treturn new OptionController( this, object, property, $1 );\n\n\t\t}\n\n\t\tconst initialValue = object[ property ];\n\n\t\tswitch ( typeof initialValue ) {\n\n\t\t\tcase 'number':\n\n\t\t\t\treturn new NumberController( this, object, property, $1, max, step );\n\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn new BooleanController( this, object, property );\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn new StringController( this, object, property );\n\n\t\t\tcase 'function':\n\n\t\t\t\treturn new FunctionController( this, object, property );\n\n\t\t}\n\n\t\tconsole.error( `gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue );\n\n\t}\n\n\t/**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too bright.\n\t * @returns {Controller}\n\t */\n\taddColor( object, property, rgbScale = 1 ) {\n\t\treturn new ColorController( this, object, property, rgbScale );\n\t}\n\n\t/**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */\n\taddFolder( title ) {\n\t\tconst folder = new GUI( { parent: this, title } );\n\t\tif ( this.root._closeFolders ) folder.close();\n\t\treturn folder;\n\t}\n\n\t/**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\tload( obj, recursive = true ) {\n\n\t\tif ( obj.controllers ) {\n\n\t\t\tthis.controllers.forEach( c => {\n\n\t\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\t\tc.load( obj.controllers[ c._name ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( recursive && obj.folders ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tf.load( obj.folders[ f._title ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */\n\tsave( recursive = true ) {\n\n\t\tconst obj = {\n\t\t\tcontrollers: {},\n\t\t\tfolders: {}\n\t\t};\n\n\t\tthis.controllers.forEach( c => {\n\n\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\tthrow new Error( `Cannot save GUI with duplicate property \"${c._name}\"` );\n\t\t\t}\n\n\t\t\tobj.controllers[ c._name ] = c.save();\n\n\t\t} );\n\n\t\tif ( recursive ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tthrow new Error( `Cannot save GUI with duplicate folder \"${f._title}\"` );\n\t\t\t\t}\n\n\t\t\t\tobj.folders[ f._title ] = f.save();\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\t/**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */\n\topen( open = true ) {\n\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\t\tthis.domElement.classList.toggle( 'closed', this._closed );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */\n\tclose() {\n\t\treturn this.open( false );\n\t}\n\n\t_setClosed( closed ) {\n\t\tif ( this._closed === closed ) return;\n\t\tthis._closed = closed;\n\t\tthis._callOnOpenClose( this );\n\t}\n\n\t/**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\topenAnimated( open = true ) {\n\n\t\t// set state immediately\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\n\t\t// wait for next frame to measure $children\n\t\trequestAnimationFrame( () => {\n\n\t\t\t// explicitly set initial height for transition\n\t\t\tconst initialHeight = this.$children.clientHeight;\n\t\t\tthis.$children.style.height = initialHeight + 'px';\n\n\t\t\tthis.domElement.classList.add( 'transition' );\n\n\t\t\tconst onTransitionEnd = e => {\n\t\t\t\tif ( e.target !== this.$children ) return;\n\t\t\t\tthis.$children.style.height = '';\n\t\t\t\tthis.domElement.classList.remove( 'transition' );\n\t\t\t\tthis.$children.removeEventListener( 'transitionend', onTransitionEnd );\n\t\t\t};\n\n\t\t\tthis.$children.addEventListener( 'transitionend', onTransitionEnd );\n\n\t\t\t// todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\t\t\tconst targetHeight = !open ? 0 : this.$children.scrollHeight;\n\n\t\t\tthis.domElement.classList.toggle( 'closed', !open );\n\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tthis.$children.style.height = targetHeight + 'px';\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */\n\ttitle( title ) {\n\t\t/**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._title = title;\n\t\tthis.$title.innerHTML = title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\treset( recursive = true ) {\n\t\tconst controllers = recursive ? this.controllersRecursive() : this.controllers;\n\t\tcontrollers.forEach( c => c.reset() );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnChange( controller );\n\t\t}\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnFinishChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnFinishChange( controller );\n\t\t}\n\n\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\tthis._onFinishChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called when this GUI or its descendants are opened or closed.\n\t * @param {function(GUI)} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onOpenClose( changedGUI => {\n\t * \tconsole.log( changedGUI._closed );\n\t * } );\n\t */\n\tonOpenClose( callback ) {\n\t\tthis._onOpenClose = callback;\n\t\treturn this;\n\t}\n\n\t_callOnOpenClose( changedGUI ) {\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnOpenClose( changedGUI );\n\t\t}\n\n\t\tif ( this._onOpenClose !== undefined ) {\n\t\t\tthis._onOpenClose.call( this, changedGUI );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all DOM elements and event listeners associated with this GUI\n\t */\n\tdestroy() {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\t\tthis.parent.folders.splice( this.parent.folders.indexOf( this ), 1 );\n\t\t}\n\n\t\tif ( this.domElement.parentElement ) {\n\t\t\tthis.domElement.parentElement.removeChild( this.domElement );\n\t\t}\n\n\t\tArray.from( this.children ).forEach( c => c.destroy() );\n\n\t}\n\n\t/**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */\n\tcontrollersRecursive() {\n\t\tlet controllers = Array.from( this.controllers );\n\t\tthis.folders.forEach( f => {\n\t\t\tcontrollers = controllers.concat( f.controllersRecursive() );\n\t\t} );\n\t\treturn controllers;\n\t}\n\n\t/**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */\n\tfoldersRecursive() {\n\t\tlet folders = Array.from( this.folders );\n\t\tthis.folders.forEach( f => {\n\t\t\tfolders = folders.concat( f.foldersRecursive() );\n\t\t} );\n\t\treturn folders;\n\t}\n\n}\n\nexport default GUI;\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController };\n","/**\n * @module log\n * This module contains functions for logging (Just the same as console.log) but it allows\n * us to disable logging in production, save logs etc etc.\n */\n\nconst LOG = true;\nimport { LogType } from './index.d';\nexport const log_types = {\n INFO: 'INFO',\n WARN: 'WARN',\n ERROR: 'ERROR',\n LOG: 'LOG',\n};\n\n\n\n/**\n * @name log_header\n * Logs a header to the console\n * \n * @example [INFO: 12:00:00]\n * \n * @param {LogType} type - The type of log\n * \n * @returns {string} The header\n */\nexport const log_header = (type: LogType): string => {\n const date = new Date();\n return `[${type}: ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}:${date.getMilliseconds()}]`;\n};\n\n\n\n/**\n * @name log\n * Logs a message to the console\n * \n * @param {LogType} type - The type of log\n * @param {Array<unknown>} args - The arguments to log\n * \n * @returns {void} - Nothing, it just logs\n */\nexport const log = (type: LogType, ...args: Array<unknown>): void => {\n // -- Only log if we are in debug mode or an ERROR has occured\n if (!LOG && type !== log_types.ERROR) return;\n const header = log_header(type),\n bold_style = 'font-weight: bold;';\n\n switch (type) {\n case log_types.INFO:\n console.info(`%c${header}`, bold_style, ...args);\n break;\n\n case log_types.WARN:\n console.warn(`%c${header}`, bold_style, ...args);\n break;\n\n case log_types.ERROR:\n console.error(`%c${header}`, bold_style, ...args);\n break;\n\n case log_types.LOG:\n console.log(`%c${header}`, bold_style, ...args);\n break;\n }\n};\n","import { FrameCallback } from '../index.d';\n\n\n\nexport default class CanvasInstance {\n // -- Getter functions for internal data\n readonly canvas: HTMLCanvasElement;\n readonly ctx: CanvasRenderingContext2D;\n readonly draw_canvas: OffscreenCanvas;\n readonly draw_ctx: OffscreenCanvasRenderingContext2D;\n readonly is_offscreen: boolean = false;\n\n private _draw_canvas_active: boolean;\n private _last_frame_time: number;\n private _real_frame_rate: number;\n private _frame_rate: number;\n private _scale: number;\n private _mouse_pos: { x: number; y: number; };\n private _frame_callbacks: Array<FrameCallback>;\n\n readonly _main_callback: (ctx: CanvasRenderingContext2D) => void\n\n\n constructor(\n canvas: HTMLCanvasElement,\n ctx: CanvasRenderingContext2D,\n draw_canvas: OffscreenCanvas,\n draw_ctx: OffscreenCanvasRenderingContext2D,\n callback: (ctx: CanvasRenderingContext2D) => void\n ) {\n // -- Read only properties\n this.canvas = canvas;\n this.ctx = ctx;\n this.draw_canvas = draw_canvas;\n this.draw_ctx = draw_ctx;\n this._main_callback = callback;\n \n\n // -- Private properties\n this._draw_canvas_active = true;\n this._last_frame_time = 0;\n this._real_frame_rate = 0;\n this._frame_rate = 0;\n this._scale = 1;\n this._mouse_pos = { x: 0, y: 0 };\n this._frame_callbacks = [];\n\n // -- Setup the canvas\n this._setup_canvas();\n\n // -- Check if the draw canvas is an offscreen canvas\n this.is_offscreen = this.draw_canvas instanceof OffscreenCanvas;\n }\n \n\n\n /**\n * @name _setup_canvas\n * Sets up the canvas for drawing / resizing etc.\n * \n * @returns {void} - Nothing.\n */\n private _setup_canvas(\n ): void {\n // -- Add a resize event listener\n window.addEventListener('resize', () => {\n // -- Resize the canvas\n this.update_canvas_size();\n \n // -- Force a redraw\n this._last_frame_time = 0;\n });\n\n // -- Set the scale\n this._scale = 1;\n this.ctx.scale(this._scale, this._scale);\n this.draw_ctx.scale(this._scale, this._scale);\n }\n\n\n \n /**\n * @name add_frame_callback\n * Add a callback function to be called on each frame.\n * \n * @param {(ctx: CanvasRenderingContext2D) => void} cb - The callback function. \n * \n * @returns {FrameCallback} - Fc Object that allows you to remove the callback.\n */\n public add_frame_callback(\n cb: () => void\n ): FrameCallback {\n // -- Create the FrameCallback object\n const fc: FrameCallback = {\n func: cb,\n remove: () => {\n const index = this._frame_callbacks.indexOf(fc);\n if (index > -1) this._frame_callbacks.splice(index, 1);\n },\n };\n\n // -- Add the callback to the array\n this._frame_callbacks.push(fc);\n return fc;\n };\n\n\n\n /**\n * @name update_canvas_size\n * Updates both canvases sizes\n * \n * @returns {void} Nothing\n */\n public update_canvas_size(\n ): void {\n this.canvas.width = this.canvas.offsetWidth;\n this.canvas.height = this.canvas.offsetHeight;\n\n this.draw_canvas.width = this.canvas.offsetWidth;\n this.draw_canvas.height = this.canvas.offsetHeight;\n }\n\n\n\n /**\n * @name clear_draw_canvas\n * Clear the draw canvas.\n * \n * @returns {void} - Nothing.\n */\n public clear_draw_canvas(\n ): void {\n this.draw_ctx.save();\n this.draw_ctx.setTransform(1, 0, 0, 1, 0, 0);\n this.draw_ctx.clearRect(\n 0, 0, \n this.ctx.canvas.width, \n this.ctx.canvas.height\n );\n this.draw_ctx.restore();\n };\n\n\n\n /**\n * @name clear_main_canvas\n * Clear the main canvas.\n * \n * @returns {void} - Nothing.\n */\n public clear_main_canvas(\n ): void {\n this.ctx.save();\n this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n this.ctx.clearRect(\n 0, 0, \n this.ctx.canvas.width, \n this.ctx.canvas.height\n );\n this.ctx.restore();\n };\n\n\n\n /**\n * @name store_draw_canvas\n * Store the draw canvas as an ImageData object.\n * \n * @returns {ImageData} - The ImageData object.\n */\n public store_draw_canvas(\n ): ImageData {\n return this.draw_ctx.getImageData(\n 0, 0, \n this.ctx.canvas.width, \n this.ctx.canvas.height\n );\n };\n\n\n\n /**\n * @name _call_frame_callbacks\n * Calls all the frame callbacks.\n * NOTE: This function is called by the main loop, and\n * probably should not be called by anything else.\n * \n * @returns {void} - Nothing.\n */\n public _call_frame_callbacks(\n ): void {\n this._frame_callbacks.forEach((fc) => fc.func());\n };\n\n\n\n /**\n * @name animate\n * Animate a function over a given time, it will call the given\n * callback function on each frame returning the progress of the\n * animation from 0.0 to 1.0.\n * \n * @param {(anim_time: number) => void} callback This function is called on each frame.\n * @param {number} ms The time in milliseconds to animate over.\n * \n * @returns {Promise<void>} - A promise that resolves when the animation is complete.\n */\n public animate(\n callback: (anim_time: number) => void,\n ms: number\n ): Promise<void> {\n const startTime = performance.now();\n let animTime = 0;\n\n return new Promise<void>((resolve) => {\n // -- Create the FrameCallback\n const fc = this.add_frame_callback(() => frame());\n\n // -- Func to progress the animation\n const frame = () => {\n const currentTime = performance.now();\n const elapsedTime = currentTime - startTime;\n animTime = elapsedTime / ms;\n\n // -- Check if were done the animation\n if (elapsedTime >= ms) {\n callback(1.0);\n fc.remove();\n resolve();\n }\n\n // -- Continue animating\n else callback(animTime);\n };\n });\n }\n\n\n\n // \n // -- Getters and setters\n //\n\n /**\n * @name draw_canvas_active\n * Get or set the draw_canvas_active flag that determines\n * whether the draw canvas is active or not.\n *\n * @type {boolean}\n */\n public get draw_canvas_active(): boolean {\n return this._draw_canvas_active; }\n\n public set draw_canvas_active(value: boolean) {\n this._draw_canvas_active = value; }\n\n\n\n /**\n * @name last_frame_time\n * Get or set the last_frame_time property that stores \n * the timestamp of the last frame.\n *\n * @type {number}\n */\n public get last_frame_time(): number {\n return this._last_frame_time; }\n\n public set _int_last_frame_time(value: number) {\n this._last_frame_time = value; }\n\n\n\n /**\n * @name real_frame_rate\n * Get the real_frame_rate property that holds \n * the calculated real frame rate.\n *\n * @type {number}\n * @readonly\n */\n public get real_frame_rate(): number {\n return this._real_frame_rate; }\n\n public set _int_real_frame_rate(value: number) {\n this._real_frame_rate = value; }\n\n\n\n /**\n * @name frame_rate\n * Get or set the frame_rate property that determines \n * the desired frame rate for drawing.\n *\n * @type {number}\n */\n public get frame_rate(): number {\n return this._frame_rate; }\n\n public set frame_rate(value: number) {\n this._frame_rate = value; }\n\n\n\n /**\n * @name scale\n * Get or set the scale property that represents the \n * current canvas scale.\n *\n * @type {number}\n */\n public get scale(): number {\n return this._scale; }\n\n public set _int_scale(value: number) {\n this._scale = value; }\n\n\n\n /**\n * @name mouse_pos\n * Get or set the mouse_pos property that holds the\n * current mouse position.\n *\n * @type {{x: number, y: number}}\n */\n public get mouse_pos(): { x: number; y: number } {\n return this._mouse_pos; }\n\n public set _int_mouse_pos(value: { x: number; y: number }) {\n this._mouse_pos = value; }\n}","import { log } from \"../log\";\nimport CanvasInstance from \"./instance\";\n\n\n\nexport default class CanvasManager {\n // -- Private array to store canvases\n private static _canvases: CanvasInstance[] = [];\n private static _started_draw_loop: boolean = false;\n private constructor() { }\n\n \n /**\n * @name canvases\n * Returns the list of canvases\n * \n * @returns {CanvasInstance[]} - the list of canvases\n */\n public static get canvases(\n ): CanvasInstance[] {\n return this._canvases;\n }\n\n\n\n /**\n * @name _add_canvas\n * Adds a canvas to the list of canvases\n * \n * @param {number} frame_rate - the frame rate to draw at\n * @param {CanvasRenderingContext2D} ctx - the canvas to add\n * @param {CanvasRenderingContext2D} draw_ctx - the canvas that will be drawn to by tools\n * and is ready to be drawn to\n * @param {(canvas: CanvasRenderingContext2D) => void} on_draw - the function to call when the canvas is drawn\n * \n * @returns {CanvasInstance} - the canvas object\n */\n private static _add_canvas(\n frame_rate: number,\n ctx: CanvasRenderingContext2D,\n on_draw: (canvas: CanvasRenderingContext2D) => void\n ): CanvasInstance {\n // -- Create the offscreen canvas or a normal canvas if it is not supported\n const draw_offscreen = new OffscreenCanvas(1, 1);\n\n // -- Create the canvas object\n const canvas_obj = new CanvasInstance(\n ctx.canvas,\n ctx,\n draw_offscreen,\n draw_offscreen.getContext('2d', { \n willReadFrequently: true\n }),\n on_draw\n );\n\n // -- Set the frame rate\n canvas_obj.frame_rate = frame_rate;\n\n // -- Push the canvas object to the list of canvases\n this._canvases.push(canvas_obj);\n return canvas_obj;\n }\n\n\n\n /**\n * @name _start_draw\n * Starts the draw loop, this is a function that once called\n * it cannot be stopped. It will loop through each of the canvases\n * and call the on_draw function.\n * \n * @returns {void}\n */\n private static _start_draw(): void {\n\n // -- Loop through each of the canvases\n const draw = () => {\n this._canvases.forEach((canvas) => {\n // -- Get the current time\n const current_time = performance.now();\n\n // -- Calculate the time elapsed since the last frame\n const elapsed_time = current_time - canvas.last_frame_time;\n\n // -- Calculate the real frame rate\n canvas._int_real_frame_rate = 1000 / elapsed_time;\n\n // -- Check if the frame rate has been reached\n if (elapsed_time < 1000 / canvas.frame_rate) return;\n\n // -- Update the canvas scale\n canvas._int_scale = canvas.ctx.getTransform().a;\n\n // -- Clear the canvas\n canvas.ctx.save();\n canvas.ctx.setTransform(1, 0, 0, 1, 0, 0);\n canvas.ctx.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\n canvas.ctx.restore();\n\n canvas.draw_ctx.save();\n canvas.draw_ctx.setTransform(1, 0, 0, 1, 0, 0);\n canvas.draw_ctx.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\n canvas.draw_ctx.restore();\n\n\n // -- Call the draw callback\n canvas._main_callback(canvas.ctx);\n\n // -- Call the frame callbacks\n canvas._call_frame_callbacks();\n\n // -- Update the last frame time\n canvas._int_last_frame_time = current_time;\n });\n\n // -- Call the draw function again\n requestAnimationFrame(draw);\n };\n\n\n // -- Only start the loop once\n if (this._started_draw_loop) {\n log('ERROR', 'Cannot start more than one draw loop.');\n return;\n }\n\n // -- Start the loop\n log('INFO', 'Started Draw loop.');\n this._started_draw_loop = true;\n draw();\n }\n\n\n\n /**\n * @name manage_canvas\n * \n * @param {number} frame_rate - the frame rate to draw at\n * @param {CanvasRenderingContext2D} ctx - the canvas to add\n * and is ready to be drawn to\n * @param {(ci: CanvasRenderingContext2D) => void} on_draw - the function to call when the canvas is drawn\n * \n * @returns {CanvasInstance} - the new canvas instance\n */\n public static manage_canvas(\n frame_rate: number,\n ctx: CanvasRenderingContext2D,\n on_draw: (ci: CanvasRenderingContext2D) => void\n ): CanvasInstance {\n const canvas_obj = this._add_canvas(\n frame_rate, \n ctx, \n on_draw\n );\n\n if (!this._started_draw_loop)\n this._start_draw();\n return canvas_obj;\n }\n}","// -- Easing functions from https://gist.github.com/gre/1650294\nexport const easing_functions: {\n [key: string]: (t: number) => number\n} = {\n // no easing, no acceleration\n linear: t => t,\n // accelerating from zero velocity\n easeInQuad: t => t*t,\n // decelerating to zero velocity\n easeOutQuad: t => t*(2-t),\n // acceleration until halfway, then deceleration\n easeInOutQuad: t => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n // accelerating from zero velocity \n easeInCubic: t => t*t*t,\n // decelerating to zero velocity \n easeOutCubic: t => (--t)*t*t+1,\n // acceleration until halfway, then deceleration \n easeInOutCubic: t => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1,\n // accelerating from zero velocity \n easeInQuart: t => t*t*t*t,\n // decelerating to zero velocity \n easeOutQuart: t => 1-(--t)*t*t*t,\n // acceleration until halfway, then deceleration\n easeInOutQuart: t => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n // accelerating from zero velocity\n easeInQuint: t => t*t*t*t*t,\n // decelerating to zero velocity\n easeOutQuint: t => 1+(--t)*t*t*t*t,\n // acceleration until halfway, then deceleration \n easeInOutQuint: t => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n}","import { render_dots } from './dots';\nimport { Dots, DotsDetailed } from './index.d';\nimport { generate_text_points } from './text';\nimport GUI from 'lil-gui'; \nimport CanvasManager from './canvas/manager';\nimport { log } from './log';\nimport { easing_functions } from './easing';\n\n// -- Attempt to get the canvas elements\nconst main_canvas = document.getElementById('main-canvas') as HTMLCanvasElement;\n\n// -- Check if the canvas elements exist\nif (!main_canvas) \n throw new Error('One ore more Canvas elements were not found');\n\n// -- Get the canvas contexts\nconst main_context = main_canvas.getContext('2d');\n\n\n// -- DEV\nconst dots: Dots = {\n rows: 10,\n cols: 50,\n\n dot_size: 4,\n dot_spacing: 5,\n\n force: 50,\n force_size: 150,\n\n max_dist: 75,\n color: '#fff'\n}\n\n\n// -- Variables\nlet dots_detailed: number[][] | null = null,\n name_width: number = 0, \n name_height: number = 0,\n text = 'GRZEGORZ.IE',\n frame_rate = 90,\n auto_scale = true,\n font_size = 17,\n scale = 1,\n easing_function = 'easeInOutQuad',\n anim_lenght = 1000;\n\n\n// -- Add the control panel\nconst gui = new GUI({\n title: 'Mess with me!',\n width: 300,\n});\n\nconst ctrl = {\n 'Frame Rate': frame_rate,\n 'Auto Scale': auto_scale,\n 'Font Size': font_size,\n 'Dot Size': dots.dot_size,\n 'Dot Spacing': dots.dot_spacing,\n 'Force': dots.force,\n 'Force Size': dots.force_size,\n 'Max Distance': dots.max_dist,\n 'Color': dots.color,\n 'Easing Function': easing_function,\n 'Animation Length': anim_lenght,\n};\n\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n // -- We need to wait for the dom to load before we can do anything\n // with styles as it could be that the styles are not loaded yet\n log('INFO', 'DOM Loaded');\n\n // -- Add the mouse events\n let mouse_event: MouseEvent = null;\n document.addEventListener('mousemove', (e) => mouse_event = e);\n\n\n // -- Add the canvases to the draw loop\n const mc = CanvasManager.manage_canvas(frame_rate, main_context, (ctx) => {\n if (text.length === 0 || !mc) return;\n \n // -- Check if the name has been generated\n if (!dots_detailed) {\n const name = generate_text_points(text, font_size, mc);\n dots_detailed = name;\n }\n\n // -- Calculate the x and y coordinates\n name_width = dots_detailed[0].length * dots.dot_size + (dots_detailed[0].length * dots.dot_spacing),\n name_height = dots_detailed.length * dots.dot_size + (dots_detailed.length * dots.dot_spacing);\n\n // -- Center the text\n const x = (ctx.canvas.width / 2) - (name_width / 2),\n y = (ctx.canvas.height / 2) - (name_height / 2);\n\n // -- Render the dots\n render_dots(mc, {\n ...dots,\n data: dots_detailed,\n }, mouse_event, \n x, \n y\n );\n });\n\n\n\n // -- Bounce function\n const bounce = () => {\n const start_font_size = font_size,\n start_dot_size = dots.dot_size,\n start_dot_spacing = dots.dot_spacing;\n\n mc.animate((a_time) => {\n // -- Ease the time\n a_time = easing_functions[easing_function](a_time);\n\n const new_font_size = Math.max(start_font_size * a_time, 0);\n const new_dot_size = Math.max(start_dot_size * a_time, 0);\n const new_dot_spacing = Math.max(start_dot_spacing * a_time, 0);\n\n // -- Set the font size\n font_size = new_font_size;\n\n // -- Set the dot size\n dots.dot_size = new_dot_size;\n\n // -- Set the dot spacing\n dots.dot_spacing = new_dot_spacing;\n }, anim_lenght);\n }\n \n\n\n\n const adjust_scale = () => {\n\n // -- Calc the % of the width that the text takes up\n const text_width = dots_detailed[0].length * dots.dot_size + (dots_detailed[0].length * dots.dot_spacing),\n percent = (text_width / mc.canvas.width) * 100;\n\n // -- We want the text to take up 80% of the width\n const max_percent = 80;\n\n // -- Calc the new scale\n const new_scale = (max_percent / percent) * 100;\n scale = new_scale / 100;\n };\n\n\n // -- On resize update the canvas size\n window.addEventListener('resize', () => {\n // -- Calculate a new font size\n if (!auto_scale) return;\n // adjust_scale();\n });\n\n\n // adjust_scale();\n mc.update_canvas_size();\n bounce();\n\n\n // -- Add the controls\n gui.add(ctrl, 'Frame Rate', 1, 500).onChange((v) => { frame_rate = v; mc.frame_rate = v; });\n gui.add(ctrl, 'Auto Scale').onChange((v) => auto_scale = v);\n gui.add(ctrl, 'Font Size', 1, 100).onChange((v) => { font_size = v; dots_detailed = null; });\n gui.add(ctrl, 'Dot Size', 1, 100).onChange((v) => dots.dot_size = v);\n gui.add(ctrl, 'Dot Spacing', 1, 100).onChange((v) => dots.dot_spacing = v);\n gui.add(ctrl, 'Force', 1, 500).onChange((v) => dots.force = v);\n gui.add(ctrl, 'Force Size', 1, 500).onChange((v) => dots.force_size = v);\n gui.add(ctrl, 'Max Distance', 1, 100).onChange((v) => dots.max_dist = v);\n gui.add(ctrl, 'Color').onChange((v) => dots.color = v);\n gui.add({ 'Text': text }, 'Text').onChange((v) => { text = v; dots_detailed = null; });\n gui.add(ctrl, 'Easing Function', Object.keys(easing_functions)).onChange((v) => easing_function = v);\n gui.add(ctrl, 'Animation Length', 1, 10000).onChange((v) => anim_lenght = v);\n gui.add({ 'Bounce': bounce }, 'Bounce');\n gui.close();\n});"],"names":["render_dots","ci","dots","e","arguments","length","undefined","x_o","y_o","mouse_pos","rect","canvas","getBoundingClientRect","clientX","left","clientY","top","get_relative_pos","ctx","beginPath","arc","Math","PI","fill","detailed","rows","data","cols","row","col","x","dot_size","dot_spacing","y","dist","get_dist_from_mouse","size","force_size","_push_dot2","_slicedToArray","push_dot","force","max_dist","norm_dist","min","fillStyle","color","sqrt","pow","angle","atan2","cos","sin","generate_text_points","text","text_height","balls","matrix","width","draw_ctx","height","clearRect","font","concat","fillText","data32","Uint32Array","getImageData","buffer","i","push","ball","processes","new_row","j","Controller","constructor","parent","object","property","className","widgetTag","this","_disabled","_hidden","initialValue","getValue","domElement","document","createElement","classList","add","$name","nextNameID","id","$widget","$disable","appendChild","addEventListener","stopPropagation","children","controllers","$children","_listenCallback","bind","name","_name","innerHTML","onChange","callback","_onChange","_callOnChange","call","_changed","onFinishChange","_onFinishChange","_callOnFinishChange","reset","setValue","enable","enabled","disable","disabled","toggle","toggleAttribute","show","style","display","hide","options","controller","destroy","max","step","decimals","listen","_listening","_listenCallbackID","cancelAnimationFrame","requestAnimationFrame","curValue","save","_listenPrevValue","updateDisplay","value","load","splice","indexOf","removeChild","BooleanController","super","$input","setAttribute","checked","normalizeColorString","string","match","result","parseInt","toString","padStart","INT","isPrimitive","v","fromHexString","substring","toHexString","ARRAY","Array","isArray","target","rgbScale","int","r","g","b","OBJECT","Object","FORMATS","ColorController","$text","$display","_format","find","format","_rgbScale","_initialValueHexString","_textFocused","_setValueFromHexString","tryParse","select","newValue","backgroundColor","FunctionController","$button","preventDefault","passive","NumberController","_initInput","stepExplicit","_getImplicitStep","_decimals","_min","_onUpdateMinMax","_max","explicit","_step","_stepExplicit","_hasSlider","percent","$fill","_inputFocused","toFixed","window","matchMedia","matches","increment","delta","parseFloat","isNaN","_snapClampSetValue","initClientX","initClientY","prevClientY","initValue","dragDelta","testingForVerticalDrag","onMouseMove","dx","dy","abs","blur","_setDraggingStyle","onMouseUp","_arrowKeyMultiplier","removeEventListener","_snap","_clamp","key","code","_normalizeMouseWheel","_initSlider","$slider","insertBefore","setValueFromX","a","right","c","d","mouseMove","mouseUp","prevClientX","testingForScroll","beginTouchDrag","touches","onTouchMove","onTouchEnd","callOnFinishChange","wheelFinishChangeTimeout","_hasScrollBar","deltaX","deltaY","clearTimeout","setTimeout","active","axis","body","_hasMin","_hasMax","floor","wheelDelta","mult","shiftKey","altKey","round","toPrecision","root","scrollHeight","clientHeight","OptionController","$select","_values","values","_names","keys","forEach","$option","selectedIndex","remove","index","StringController","stylesInjected","GUI","autoPlace","container","title","closeFolders","injectStyles","touchStyles","folders","_closed","$title","openAnimated","click","cssContent","injected","before","querySelector","head","_injectStyles","setProperty","_closeFolders","$1","console","error","addColor","addFolder","folder","close","obj","recursive","f","_title","Error","open","_setClosed","closed","_callOnOpenClose","initialHeight","onTransitionEnd","targetHeight","controllersRecursive","onOpenClose","_onOpenClose","changedGUI","parentElement","from","foldersRecursive","log_types","log","type","_console","_console2","_console3","_console4","header","date","Date","getHours","getMinutes","getSeconds","getMilliseconds","log_header","bold_style","_len","args","_key","info","apply","warn","CanvasInstance","draw_canvas","_classCallCheck","_defineProperty","_main_callback","_draw_canvas_active","_last_frame_time","_real_frame_rate","_frame_rate","_scale","_mouse_pos","_frame_callbacks","_setup_canvas","is_offscreen","OffscreenCanvas","_this","update_canvas_size","scale","cb","_this2","fc","func","offsetWidth","offsetHeight","setTransform","restore","ms","_this3","startTime","performance","now","animTime","Promise","resolve","add_frame_callback","frame","elapsedTime","get","set","CanvasManager","_canvases","frame_rate","on_draw","draw_offscreen","canvas_obj","getContext","willReadFrequently","_started_draw_loop","draw","current_time","elapsed_time","last_frame_time","_int_real_frame_rate","_int_scale","getTransform","_call_frame_callbacks","_int_last_frame_time","_add_canvas","_start_draw","easing_functions","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","reject","record","_typeof","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","main_canvas","getElementById","main_context","dots_detailed","name_width","name_height","auto_scale","font_size","easing_function","anim_lenght","gui","ctrl","_callee","mouse_event","mc","bounce","_context","manage_canvas","start_font_size","start_dot_size","start_dot_spacing","animate","a_time","new_font_size","new_dot_size","new_dot_spacing"],"sourceRoot":""}